/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.0.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({

});


Ext.application({
    models: [
        'PeopleModel'
    ],
    stores: [
        'PeopleStore',
        'ActionStore'
    ],
    views: [
        'MainECLContainer'
    ],
    controllers: [
        'ContactListController'
    ],
    icon: {
        36: 'resources/icons/Icon_Android36.png',
        48: 'resources/icons/Icon_Android48.png',
        57: 'resources/icons/icon.png',
        72: 'resources/icons/icon-72.png',
        114: 'resources/icons/icon@2x.png',
        144: 'resources/icons/icon-72@2x.png'
    },
    name: 'MyApp',

    launch: function() {
        var os = "unknown";
        var packager = "unknown";
        var osVersion = "unknown";

        // Determine OS and Packager(if any)
        if (typeof device!=="undefined" && typeof device.platform!=="undefined"){
            os = device.platform;
            os=(os=="iPhone")?"iOS":os; // necessary for older versions of Cordova

            if(os=="iOS"){
                Ext.Viewport.setHeight(Ext.Viewport.getWindowHeight() - 20);
            }

            // deterine packager
            if(os=="BlackBerry 10") {
                packager = "WebWorks";  // necessary for legacy code
            }
            else{
                packager = "Cordova";
            }
        }
        else if (Ext.os.is.iOS){
            if (Ext.os.version.major >= 7) {
                Ext.Viewport.setHeight(Ext.Viewport.getWindowHeight() - 20);
            }
        }
        if(navigator && navigator.splashscreen){
            navigator.splashscreen.hide();
        }
        MyApp.globals = {
            os: os,
            osVersion: osVersion,
            packager: packager
        };

        document.addEventListener('deviceready', Ext.create('MyApp.view.MainECLContainer', {fullscreen: true}), false);
        return;
        Ext.create('MyApp.view.MainECLContainer', {fullscreen: true});
    }

});
